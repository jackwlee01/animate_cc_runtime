{"mappings":"kgBAIA,MAAMA,EAASC,SAASC,eAAe,UACjCC,EAAQH,EAAOI,WAAW,MAChC,IAAIC,EAAMC,EAAAC,YAAYP,GAGtB,MAAMQ,EAAQ,IAAIC,EAAAC,cAAcP,GAC1BQ,EAAcH,EAAMI,cAAc,OAAQ,kBAShD,IAAIC,EAAQ,WAEHC,IACLN,EAAMO,IAAIC,UAAU,EAAG,EAAGhB,EAAOiB,MAAOjB,EAAOkB,QAE/CV,EAAMO,IAAII,OAENX,EAAMO,IAAIK,UAAUpB,EAAOiB,MAAM,EAAGjB,EAAOkB,OAAO,GAClDV,EAAMO,IAAIM,MAAMhB,EAAKA,GAErBM,EAAYW,OAAO,SAASC,KAAKV,GAErCL,EAAMO,IAAIS,UAEVX,GAAS,EACTY,sBAAsBX,2BApBhBH,EAAYe,WAClBZ,IAsBJa","sources":["examples/minimal/minimal.ts"],"sourcesContent":["import { setupCanvas } from \"../example-utils\";\nimport { SceneCanvas2d } from \"animcc/SceneCanvas2d\";\n\n// Set up canvas\nconst canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\nconst ctx2d = canvas.getContext('2d')!\nvar dpr = setupCanvas(canvas) // Device pixel ratio\n\n// Set up animation context and animation libraries\nconst scene = new SceneCanvas2d(ctx2d)\nconst testLibrary = scene.createLibrary('test', '../assets/test')\n\n\nasync function init(){\n    await testLibrary.loadData();\n    update();\n}\n\n\nlet frame = 0;\n    \nfunction update(){\n    scene.ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n    scene.ctx.save();\n    \n        scene.ctx.translate(canvas.width/2, canvas.height/2)\n        scene.ctx.scale(dpr, dpr)\n\n        testLibrary.symbol(\"Scene\").draw(frame)\n\n    scene.ctx.restore()\n    \n    frame += 1;\n    requestAnimationFrame(update)\n}\n\ninit();\n"],"names":["$a3c9c0f7363af045$var$canvas","document","getElementById","$a3c9c0f7363af045$var$ctx2d","getContext","$a3c9c0f7363af045$var$dpr","$5BHcR","setupCanvas","$a3c9c0f7363af045$var$scene","$b4RtA","SceneCanvas2d","$a3c9c0f7363af045$var$testLibrary","createLibrary","$a3c9c0f7363af045$var$frame","$a3c9c0f7363af045$var$update","ctx","clearRect","width","height","save","translate","scale","symbol","draw","restore","requestAnimationFrame","loadData","$a3c9c0f7363af045$var$init"],"version":3,"file":"index.9e54c3d3.js.map"}