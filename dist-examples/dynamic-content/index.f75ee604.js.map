{"mappings":"glBAWA,MAAMA,EAASC,SAASC,eAAe,UACjCC,EAAQH,EAAOI,WAAW,MAChC,IAAIC,EAAMC,EAAAC,YAAYP,GAGtB,MAAMQ,EAAQ,IAAIC,EAAAC,cAAcP,GAC1BQ,EAAcH,EAAMI,cAAc,OAAQ,kBAShD,IAAIC,EAAQ,EACRC,EAAW,EACXC,GAAoB,EACpBC,EAAY,EACZC,EAAe,EACfC,GAAU,EACVC,EAAY,EACZC,GAAO,WA2CFC,EAAcC,EAAeC,EAAcC,GAC7CF,aAAgBG,EAAAC,KAEC,yBAAbJ,EAAKK,MACJnB,EAAMoB,IAAIC,OACNrB,EAAMoB,IAAIE,OAAOb,GACjBK,EAAKS,KAAKR,EAAOC,EAAMH,GAC3Bb,EAAMoB,IAAII,WAEVV,EAAKS,KAAKR,EAAOC,EAAMH,GAEtBC,aAAgBW,EAAAC,MAEP,aAAXZ,EAAKK,KACJL,EAAKS,KAAKf,EAAWQ,EAAMH,GAE3BC,EAAKS,KAAKR,EAAOC,EAAMH,GAEtBC,aAAgBa,EAAAC,MACrBd,EAAKS,KAAKR,EAAOC,EAAMH,GAClBC,aAAgBe,EAAAC,SAEK,aAAvBhB,EAAKC,MAAMgB,MAAMZ,KAChBhB,EAAY6B,OAAO,OAAO1B,GAAUiB,KAAKR,EAAOC,EAAMH,GAEtDC,EAAKS,KAAKR,EAAOC,EAAMH,GAEtBC,aAAgBmB,EAAAC,SACrBpB,EAAKS,KAAKR,GAIPR,IACCP,EAAMoB,IAAIe,YAAc,UACxBnC,EAAMoB,IAAIgB,WAAW,EAAG,EAAGtB,EAAKuB,MAAOvB,EAAKwB,SAG7CxB,EAAKyB,eAAevC,EAAMwC,OAAQxC,EAAMyC,OAAQzC,EAAMoB,IAAIsB,kBACzD1C,EAAMoB,IAAIe,YAAc,UACxBnC,EAAMoB,IAAIgB,WAAW,EAAG,EAAGtB,EAAKuB,MAAOvB,EAAKwB,mBAM/CK,IACL3C,EAAMoB,IAAIwB,UAAY,UACtB5C,EAAMoB,IAAIyB,SAAS,EAAG,EAAGrD,EAAO6C,MAAO7C,EAAO8C,QAE9CtC,EAAMoB,IAAIC,OAENrB,EAAMoB,IAAIwB,UAAY,UACtB5C,EAAMoB,IAAI0B,KAAO,kBACjB9C,EAAMoB,IAAI2B,SAAS,4CAA6C,GAAI,IACpE/C,EAAMoB,IAAI2B,SAAS,sBAAuB,GAAI,KAC9C/C,EAAMoB,IAAI2B,SAAS,uBAAwB,GAAI,KAC/C/C,EAAMoB,IAAI2B,SAAS,0BAA2B,GAAI,KAClD/C,EAAMoB,IAAI2B,SAAS,gCAAiC,GAAI,KACxD/C,EAAMoB,IAAI2B,SAAS,iBAAkB,GAAI,KACzC/C,EAAMoB,IAAI2B,SAAS,wBAAyB,GAAI,KAChD/C,EAAMoB,IAAI2B,SAAS,6BAA8B,GAAI,KAErD/C,EAAMoB,IAAI4B,UAAUxD,EAAO6C,MAAM,EAAG7C,EAAO8C,OAAO,GAClDtC,EAAMoB,IAAI6B,MAAMpD,EAAKA,GAErBG,EAAMoB,IAAIC,OACNrB,EAAMoB,IAAI4B,WAAU,IAAM,GAC1B7C,EAAY6B,OAAO,gBAAgBT,KAAKlB,EAAOO,EAAMC,GACzDb,EAAMoB,IAAII,UAEVxB,EAAMoB,IAAIC,OACNrB,EAAMoB,IAAI4B,UAAU,EAAG,GACvB7C,EAAY6B,OAAO,eAAeT,KAAKlB,EAAOO,EAAMC,GACxDb,EAAMoB,IAAII,UAEVxB,EAAMoB,IAAIC,OACNrB,EAAMoB,IAAI4B,UAAU,KAAK,IACzB7C,EAAY6B,OAAO,YAAYT,KAAKlB,EAAOO,EAAMC,GACrDb,EAAMoB,IAAII,UAEVxB,EAAMoB,IAAIC,OACN,MAAM6B,EAAQlD,EAAMmD,SAASnD,EAAMwC,OAAQxC,EAAMyC,QACjDzC,EAAMoB,IAAI4B,UAAUE,EAAME,EAAGF,EAAMG,GACnCrD,EAAMoB,IAAIkC,YACVtD,EAAMoB,IAAImC,IAAI,EAAG,EAAG,EAAG,EAAG,EAAEC,KAAKC,IACjCzD,EAAMoB,IAAIsC,SACd1D,EAAMoB,IAAII,UAEdxB,EAAMoB,IAAII,UAGVnB,GAASK,GAAWC,EAAYA,EAChCgD,sBAAsBhB,GArI1BlD,SAASmE,UAAYC,IACjB,OAAOA,EAAEC,KACL,IAAK,IAAKxD,EAAW,EAAG,MACxB,IAAK,IAAKA,EAAW,EAAG,MACxB,IAAK,IAAKA,EAAW,EAAG,MACxB,IAAK,IAAKA,EAAW,EAAG,MACxB,IAAK,IAAKI,GAAWA,EAAS,MAC9B,IAAK,IAAKC,GAAa,EAAG,MAC1B,IAAK,IAAKA,GAAa,EAAG,MAC1B,IAAK,IAAKC,GAAQA,EAAM,MACxB,IAAK,UAAWJ,IAAa,MAC7B,IAAK,YAAaA,IAAa,MAC/B,IAAK,YAAaC,GAAc,GAAK,MACrC,IAAK,aAAcA,GAAc,GAAK,MACtC,IAAK,IAAKF,GAAqBA,EAGnCD,EAAWyD,EAAAC,QAAQ1D,EAAU,GAC7BE,EAAYuD,EAAAC,QAAQxD,EAAW,2BAhCzBL,EAAY8D,WAClBtB,IAsJJuB","sources":["examples/dynamic-content/dynamic-content.ts"],"sourcesContent":["import { setupCanvas } from \"../example-utils\"\nimport { SceneCanvas2d } from \"animcc/SceneCanvas2d\";\nimport { Drawable } from \"animcc/Drawable\";\nimport { Clip } from \"animcc/Clip\";\nimport { Layer } from \"animcc/Layer\";\nimport { Frame } from \"animcc/Frame\";\nimport { Instance } from \"animcc/Instance\";\nimport { Sprite } from \"animcc/Sprite\";\nimport { modWrap } from \"animcc/util/math\";\n\n// Set up canvas\nconst canvas = document.getElementById(\"canvas\") as HTMLCanvasElement\nconst ctx2d = canvas.getContext('2d')!\nvar dpr = setupCanvas(canvas) // Device pixel ratio\n\n// Set up animation context and animation libraries\nconst scene = new SceneCanvas2d(ctx2d)\nconst hatsLibrary = scene.createLibrary('hats', '../assets/hats')\n\n\nasync function init(){\n    await hatsLibrary.loadData();\n    update();\n}\n\n\nlet frame = 0;\nlet hatIndex = 3;\nlet showSpriteBorders = false;\nlet eyesFrame = 1;\nlet noseRotation = 0;\nlet reverse = false;\nlet playSpeed = 1;\nlet lerp = false;\n\ndocument.onkeydown = e => {\n    switch(e.key){\n        case '1': hatIndex = 0; break;\n        case '2': hatIndex = 1; break;\n        case '3': hatIndex = 2; break;\n        case '4': hatIndex = 3; break;\n        case 'r': reverse = !reverse; break;\n        case '=': playSpeed *= 2; break;\n        case '-': playSpeed /= 2; break;\n        case 'l': lerp = !lerp; break;\n        case 'ArrowUp': eyesFrame++; break\n        case 'ArrowDown': eyesFrame--; break\n        case 'ArrowLeft': noseRotation+=0.2; break\n        case 'ArrowRight': noseRotation-=0.2; break\n        case ' ': showSpriteBorders = !showSpriteBorders; break\n    }\n\n    hatIndex = modWrap(hatIndex, 4)\n    eyesFrame = modWrap(eyesFrame, 2)\n}\n\n\n// Note: This is a recursive function. It will walk\n// the logic along the display hierarchy. The hierarchy\n// is like this:\n//\n// - Clip\n//     - Layer\n//     - Layer\n//          - Frame (since frame chosen by frame:number)\n//              - Instance\n//              - Instance\n//                  - Sprite or Clip \n//\n// This function shows a few different ways you can dynamically manipulate\n// the rendering:\n//     - How you can dynamically set a frame on a layer (which you could also do on a clip)\n//     - How you can dynamically swap out one clip for another\n//     - How you can draw arbitrary stuff on the 2d context\n//     - How you can apply state base transformations\n//\nfunction drawWithLogic(item:Drawable, frame:number, lerp?:boolean){\n    if(item instanceof Clip){\n        // Rotate any clip named game/Walker_Nose_Nose\n        if(item.name == \"game/Walker_Nose_Nose\"){\n            scene.ctx.save();\n                scene.ctx.rotate(noseRotation)\n                item.draw(frame, lerp, drawWithLogic)\n            scene.ctx.restore();\n        }else{\n            item.draw(frame, lerp, drawWithLogic)\n        }\n    }else if(item instanceof Layer){\n        // If the layer name is \"layer_eye\", choose the frame\n        if(item.name==\"layer_eye\"){\n            item.draw(eyesFrame, lerp, drawWithLogic)\n        }else{\n            item.draw(frame, lerp, drawWithLogic)\n        }\n    }else if(item instanceof Frame){\n        item.draw(frame, lerp, drawWithLogic)\n    }else if(item instanceof Instance){\n        // If the instance's layer name is \"layer_hat\", choose the hat clip\n        if(item.frame.layer.name==\"layer_hat\"){\n            hatsLibrary.symbol(\"Hat_\"+hatIndex).draw(frame, lerp, drawWithLogic)\n        }else{\n            item.draw(frame, lerp, drawWithLogic)\n        }\n    }else if(item instanceof Sprite){\n        item.draw(frame) // Note: leaf node, so don't supply drawWithLogic as an argument\n\n        \n        // Draw a red border over any sprite\n        if(showSpriteBorders){\n            scene.ctx.strokeStyle = '#CC0000'\n            scene.ctx.strokeRect(0, 0, item.width, item.height)\n        }\n\n        if(item.isSolidPixelAt(scene.mouseX, scene.mouseY, scene.ctx.getTransform())){\n            scene.ctx.strokeStyle = '#FF00FF'\n            scene.ctx.strokeRect(0, 0, item.width, item.height)\n        }\n    }\n}\n\n\nfunction update(){\n    scene.ctx.fillStyle = '#cccccc'\n    scene.ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n    scene.ctx.save();\n\n        scene.ctx.fillStyle = '#333333'\n        scene.ctx.font = '36px sans-serif';\n        scene.ctx.fillText('Mouse over: Highlight spites under cursor', 20, 50);\n        scene.ctx.fillText('1,2,3,4: Change hat', 20, 100);\n        scene.ctx.fillText('Up/Down: Change eyes', 20, 150);\n        scene.ctx.fillText('Left/Right: Rotate nose', 20, 200);\n        scene.ctx.fillText('Spacebar: Toggle debug border', 20, 250);\n        scene.ctx.fillText('l: Toggle lerp', 20, 300);\n        scene.ctx.fillText('r: Reverse play speed', 20, 350);\n        scene.ctx.fillText('+ and -: Change play speed', 20, 400);\n        \n        scene.ctx.translate(canvas.width/2, canvas.height/2)\n        scene.ctx.scale(dpr, dpr)\n\n        scene.ctx.save();\n            scene.ctx.translate(-200, 0)\n            hatsLibrary.symbol(\"Walker_Laser\").draw(frame, lerp, drawWithLogic)\n        scene.ctx.restore()\n\n        scene.ctx.save()\n            scene.ctx.translate(0, 0)\n            hatsLibrary.symbol(\"Walker_Nose\").draw(frame, lerp, drawWithLogic)\n        scene.ctx.restore()\n\n        scene.ctx.save();\n            scene.ctx.translate(200, -50)\n            hatsLibrary.symbol(\"StarDude\").draw(frame, lerp, drawWithLogic)\n        scene.ctx.restore()\n\n        scene.ctx.save()\n            const coord = scene.getLocal(scene.mouseX, scene.mouseY)\n            scene.ctx.translate(coord.x, coord.y)\n            scene.ctx.beginPath()\n            scene.ctx.arc(0, 0, 6, 0, 2*Math.PI)\n            scene.ctx.stroke()\n        scene.ctx.restore()\n    \n    scene.ctx.restore()\n\n    //frame = 130\n    frame += reverse ? -playSpeed : playSpeed;\n    requestAnimationFrame(update)\n}\n\n\ninit();\n\n"],"names":["$554bf703a2466a42$var$canvas","document","getElementById","$554bf703a2466a42$var$ctx2d","getContext","$554bf703a2466a42$var$dpr","$5BHcR","setupCanvas","$554bf703a2466a42$var$scene","$b4RtA","SceneCanvas2d","$554bf703a2466a42$var$hatsLibrary","createLibrary","$554bf703a2466a42$var$frame","$554bf703a2466a42$var$hatIndex","$554bf703a2466a42$var$showSpriteBorders","$554bf703a2466a42$var$eyesFrame","$554bf703a2466a42$var$noseRotation","$554bf703a2466a42$var$reverse","$554bf703a2466a42$var$playSpeed","$554bf703a2466a42$var$lerp","$554bf703a2466a42$var$drawWithLogic","item","frame","lerp","$iwtVH","Clip","name","ctx","save","rotate","draw","restore","$grEWN","Layer","$b16Gm","Frame","$aIUQE","Instance","layer","symbol","$7oRJk","Sprite","strokeStyle","strokeRect","width","height","isSolidPixelAt","mouseX","mouseY","getTransform","$554bf703a2466a42$var$update","fillStyle","fillRect","font","fillText","translate","scale","coord","getLocal","x","y","beginPath","arc","Math","PI","stroke","requestAnimationFrame","onkeydown","e","key","$ixNXR","modWrap","loadData","$554bf703a2466a42$var$init"],"version":3,"file":"index.f75ee604.js.map"}